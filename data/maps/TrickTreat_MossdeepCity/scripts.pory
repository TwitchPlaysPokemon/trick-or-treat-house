raw `
TrickTreat_MossdeepCity_MapScripts:: @ 81E4A96
	map_script MAP_SCRIPT_ON_TRANSITION, TrickTreat_MossdeepCity_OnTransition
	map_script MAP_SCRIPT_ON_RETURN_TO_FIELD, TrickTreat_MossdeepCity_OnReturnToField
	puzzle_info TrickTreat_MossdeepCity_Name, TrickTreat_MossdeepCity_Author
	puzzle_custom_intro TrickTreat_MossdeepCity_Intro
	puzzle_quip TrickTreat_MossdeepCity_Quip
	puzzle_metavars TrickTreat_MossdeepCity_Variables
	puzzle_setup_script TrickTreat_MossdeepCity_SetupScript
	puzzle_candylist TrickTreat_MossdeepCity_CandyList
	.byte 0
@ -----------------------------------------------------

#define METATILE_DoorOff 0x021
#define FLAG_BEAT_STEVEN FLAG_PUZZLE_4F
#define VAR_TRICK_STOLEN_MON VAR_PUZZLE_00

#define LID_TRICKSTER_A        20
#define FLAG_TRICKSTER_A_HIDE  FLAG_PUZZLE_30
#define VAR_TRICKSTER_A_POS    VAR_PUZZLE_10

#define LID_TRICKSTER_B        21
#define FLAG_TRICKSTER_B_HIDE  FLAG_PUZZLE_31
#define VAR_TRICKSTER_B_POS    VAR_PUZZLE_11

#define LID_TRICKSTER_C        22
#define FLAG_TRICKSTER_C_HIDE  FLAG_PUZZLE_32
#define VAR_TRICKSTER_C_POS    VAR_PUZZLE_12

#define LID_TRICKSTER_D        23
#define FLAG_TRICKSTER_D_HIDE  FLAG_PUZZLE_33
#define VAR_TRICKSTER_D_POS    VAR_PUZZLE_13

#define LID_TRICKSTER_E        24
#define FLAG_TRICKSTER_E_HIDE  FLAG_PUZZLE_34
@ #define VAR_TRICKSTER_E_POS    VAR_PUZZLE_14

#define LID_RED_HERRING        25
#define FLAG_RED_HERRING_HIDE  FLAG_PUZZLE_35
@ #define VAR_RED_HERRING_POS    VAR_PUZZLE_14

@ -----------------------------------------------------
TrickTreat_MossdeepCity_Name:
	.string "Malteasers in Mossdeep$"
TrickTreat_MossdeepCity_Author:
	.string "Tustin2121$"
TrickTreat_MossdeepCity_Intro:
	.string "Hey {PLAYER}! Wanna go for another round\n"
	.string "of Trick or Treating?\p"
	.string "{YOUNGSTER} found the way to Mossdeep!\n"
	.string "He and the others should be there now,\l"
	.string "collecting all the candy!\p"
	.string "Let's go!$"
TrickTreat_MossdeepCity_Quip:
	.string "{YOUNGSTER}: I got a pretty good haul,\n"
	.string "{PLAYER}. How about you?$"
.align 2
TrickTreat_MossdeepCity_Variables:
	.2byte VAR_OBJ_GFX_ID_0, EVENT_OBJ_GFX_FAIRY_GIRL
	.2byte VAR_OBJ_GFX_ID_1, EVENT_OBJ_GFX_YOUNGSTER
	.2byte 0
TrickTreat_MossdeepCity_CandyList:
	.2byte FLAG_CANDY_RARE_01
	.2byte FLAG_CANDY_UNCOMMON_01
	.2byte FLAG_CANDY_RARE_02
	.2byte FLAG_CANDY_COMMON_01
	.2byte FLAG_CANDY_ABUNDANT_01
	.2byte FLAG_CANDY_UNCOMMON_02
	.2byte FLAG_CANDY_UNCOMMON_03
	@ Trick or Treat Spots
	.2byte FLAG_PUZZLE_20 @ITEM_CANDY_ABUNDANT
	.2byte FLAG_PUZZLE_21 @ITEM_CANDY_ABUNDANT
	.2byte FLAG_PUZZLE_22 @ITEM_CANDY_UNCOMMON
	.2byte FLAG_PUZZLE_24 @ITEM_CANDY_ABUNDANT
	.2byte FLAG_PUZZLE_25 @ITEM_CANDY_UNCOMMON
	.2byte FLAG_PUZZLE_26 @ITEM_CANDY_HEALTHY
	.2byte FLAG_PUZZLE_27 @ITEM_CANDY_UNCOMMON
	@ Steven doesn't count unless you fight him and win
	.2byte FLAG_BEAT_STEVEN @ITEM_CANDY_TOBLERONE 
	.2byte 0


`
// VAR_TRICK_STOLEN_MON: 0 = Not yet, 1 = done, 6->2 = remaining to be found

script TrickTreat_MossdeepCity_SetupScript {
	call (TrickTreat_MossdeepCity_Tricksters_Setup)
	random(3)
	copyvar(VAR_TRICKSTER_A_POS, VAR_RESULT)
	random(3)
	copyvar(VAR_TRICKSTER_B_POS, VAR_RESULT)
	random(3)
	copyvar(VAR_TRICKSTER_C_POS, VAR_RESULT)
	random(3)
	copyvar(VAR_TRICKSTER_D_POS, VAR_RESULT)
	// Position tricksters initially
}

script TrickTreat_MossdeepCity_OnTransition {
	if (flag(FLAG_PUZZLE_23)) { setmetatile (27, 12, METATILE_DoorOff, TRUE) }
	if (flag(FLAG_PUZZLE_24)) { setmetatile (26, 18, METATILE_DoorOff, TRUE) }
	if (flag(FLAG_PUZZLE_25)) { setmetatile (36, 11, METATILE_DoorOff, TRUE) }
	if (flag(FLAG_PUZZLE_26)) { setmetatile (44, 26, METATILE_DoorOff, TRUE) }
	if (var(VAR_TRICK_STOLEN_MON) == 0) {
		
	}
}

script TrickTreat_MossdeepCity_OnReturnToField {
	if (var(VAR_METATILE_X) > 0) {
		setdooropen (VAR_METATILE_X, VAR_METATILE_Y)
	}
}

# -----------------------------------------------------

script TrickTreat_MossdeepCity_EventScript_1E4B1D {
	msgbox ("MOSSDEEP CITY POKéMON GYM\n"
			"LEADERS: LIZA & TATE\p"
			"“The mystic combination!”$", MSGBOX_SIGN)
}
script TrickTreat_MossdeepCity_EventScript_1E4B26 {
	msgbox ("MOSSDEEP CITY\n"
			"“Our slogan: Cherish POKéMON!”$", MSGBOX_SIGN)
}
script TrickTreat_MossdeepCity_EventScript_1E4B2F {
	msgbox ("MOSSDEEP SPACE CENTER\n"
			"“The closest place to space.”$", MSGBOX_SIGN)
}

# -----------------------------------------------------
# Tricksters

script TrickTreat_MossdeepCity_Tricksters_Setup {
	if (var(VAR_TRICK_STOLEN_MON) == 0) {
		setflag (FLAG_TRICKSTER_A_HIDE)
		setflag (FLAG_TRICKSTER_B_HIDE)
		setflag (FLAG_TRICKSTER_D_HIDE)
		setflag (FLAG_TRICKSTER_E_HIDE)
		setobjectxyperm (LID_TRICKSTER_A, 54, 31)
		setobjectxyperm (LID_TRICKSTER_B, 54, 32)
		setobjectxyperm (LID_TRICKSTER_D, 65, 26)
		setobjectxyperm (LID_TRICKSTER_E, 54, 32)
		
		clearflag (FLAG_TRICKSTER_C_HIDE)
		setobjectmovementtype (LID_TRICKSTER_C, MOVEMENT_TYPE_FACE_LEFT)
		setobjectxyperm (LID_TRICKSTER_C, 65, 32)
	} 
	elif (var(VAR_TRICK_STOLEN_MON) == 1) {
		# Hide all
		setflag (FLAG_TRICKSTER_A_HIDE)
		setflag (FLAG_TRICKSTER_B_HIDE)
		setflag (FLAG_TRICKSTER_C_HIDE)
		setflag (FLAG_TRICKSTER_D_HIDE)
		setflag (FLAG_TRICKSTER_E_HIDE)
		setflag (FLAG_RED_HERRING_HIDE)
	} 
	else {
		// Beach hider
		clearflag (FLAG_TRICKSTER_A_HIDE)
		setobjectmovementtype (LID_TRICKSTER_A, MOVEMENT_TYPE_LOOK_AROUND)
		switch (var(VAR_TRICKSTER_A_POS)) {
			case 0: setobjectxyperm (LID_TRICKSTER_A, 12,  9) // Behind house
			case 1: setobjectxyperm (LID_TRICKSTER_A, 10, 23) // Behind entrance
			case 2: setobjectxyperm (LID_TRICKSTER_A, 14, 29) // Behind tree
		}
		// Main town area
		clearflag (FLAG_TRICKSTER_B_HIDE)
		setobjectmovementtype (LID_TRICKSTER_B, MOVEMENT_TYPE_LOOK_AROUND)
		switch (var(VAR_TRICKSTER_B_POS)) {
			case 0: setobjectxyperm (LID_TRICKSTER_B, 50,  9) // Behind gym
			case 1: setobjectxyperm (LID_TRICKSTER_B, 32, 16) // Clump of trees
			case 2: setobjectxyperm (LID_TRICKSTER_B, 36, 15) // Behind center
		}
		// Upper area (with red herring kid)
		clearflag (FLAG_TRICKSTER_C_HIDE)
		setobjectmovementtype (LID_TRICKSTER_C, MOVEMENT_TYPE_LOOK_AROUND)
		switch (var(VAR_TRICKSTER_C_POS)) {
			case 0: 
				setobjectxyperm (LID_TRICKSTER_C, 78, 29)
				setobjectxyperm (LID_RED_HERRING, 50, 15)
			case 1: 
				setobjectxyperm (LID_TRICKSTER_C, 56, 22)
				setobjectxyperm (LID_RED_HERRING, 78, 29)
			case 2: 
				setobjectxyperm (LID_TRICKSTER_C, 50, 15)
				setobjectxyperm (LID_RED_HERRING, 78, 29)
		}
		// 
		clearflag (FLAG_TRICKSTER_D_HIDE)
		setobjectmovementtype (LID_TRICKSTER_D, MOVEMENT_TYPE_LOOK_AROUND)
		switch (var(VAR_TRICKSTER_D_POS)) {
			case 0: setobjectxyperm (LID_TRICKSTER_D, 42, 33) // Watery trees
			case 1: setobjectxyperm (LID_TRICKSTER_D, 51, 35) // Lower trees
			case 2: setobjectxyperm (LID_TRICKSTER_D, 25, 15) // Behind house
		}
		// Behind the space center, static
		clearflag (FLAG_TRICKSTER_E_HIDE)
		setobjectmovementtype (LID_TRICKSTER_E, MOVEMENT_TYPE_LOOK_AROUND)
		setobjectxyperm (LID_TRICKSTER_E, 74, 9)
	}
	return
}

script TrickTreat_MossdeepCity_Tricksters_Trigger {
	lockall
	getplayerxy (VAR_INTERACT_X, VAR_INTERACT_Y)
	subvar (VAR_INTERACT_Y, 31)
	selectpointer (TrickTreat_MossdeepCity_Tricksters_Movement0Table, VAR_INTERACT_Y)
	applymovement (EVENT_OBJ_ID_PLAYER, 0)
	applymovement (LID_TRICKSTER_C, Common_Movement_WalkLeft2)
	waitmovement (EVENT_OBJ_ID_PLAYER)
	applymovement (EVENT_OBJ_ID_PLAYER, Common_Movement_WalkInPlaceRight)
	waitmovement (EVENT_OBJ_ID_PLAYER)
	waitmovement (LID_TRICKSTER_C)
	addobject(LID_TRICKSTER_A)
	addobject(LID_TRICKSTER_B)
	addobject(LID_TRICKSTER_D)
	addobject(LID_TRICKSTER_E)
	message ("Trick or Treat!\p$")
	waitmessage
	applymovement (LID_TRICKSTER_A, TrickTreat_MossdeepCity_Tricksters_Movement1)
	message ("So…{PAUSE 20} which will it be?\p$")
	delay (12)
	applymovement (LID_TRICKSTER_B, TrickTreat_MossdeepCity_Tricksters_Movement2)
	waitmessage
	delay (2)
	applymovement (LID_TRICKSTER_E, TrickTreat_MossdeepCity_Tricksters_Movement3)
	message ("The Trick?{PAUSE 40}\nOr the Treat?\p$")
	delay (22)
	playse (SE_PIN)
	applymovement (EVENT_OBJ_ID_PLAYER, TrickTreat_MossdeepCity_Tricksters_MovementPlayerPanic)
	applymovement (LID_TRICKSTER_D, TrickTreat_MossdeepCity_Tricksters_Movement4)
	waitmovement(LID_TRICKSTER_A)
	waitmovement(LID_TRICKSTER_B)
	waitmovement(LID_TRICKSTER_D)
	waitmovement(LID_TRICKSTER_E)
	waitmovement(EVENT_OBJ_ID_PLAYER)
	#
	waitmessage
	msgbox ("What? You think we want a battle?\n"
			"Heh.\p"
			"How can you battle…\n"
			"With no {POKEMON}…?$")
	# 
	setflag (FLAG_PUZZLE_HAS_CHANGED_PARTY)
	clearflag (FLAG_SYS_POKEMON_GET)
	callnative (MossdeepStealPokemon)
	setvar (VAR_TRICK_STOLEN_MON, 6) # Note: Order is important here
	#
	playse (SE_PIN)
	applymovement (EVENT_OBJ_ID_PLAYER, TrickTreat_MossdeepCity_Tricksters_MovementPlayerPanic)
	applymovement (LID_TRICKSTER_A, TrickTreat_MossdeepCity_Tricksters_RunAway1)
	applymovement (LID_TRICKSTER_B, TrickTreat_MossdeepCity_Tricksters_RunAway2)
	applymovement (LID_TRICKSTER_C, TrickTreat_MossdeepCity_Tricksters_RunAway3)
	applymovement (LID_TRICKSTER_D, TrickTreat_MossdeepCity_Tricksters_RunAway4)
	applymovement (LID_TRICKSTER_E, TrickTreat_MossdeepCity_Tricksters_RunAway5)
	message("HA HA HA HA HA HA HA HA HA!\n"
			"You'll never find us!$")
	waitmessage
	waitbuttonpress
	waitmovement(LID_TRICKSTER_A)
	waitmovement(LID_TRICKSTER_B)
	waitmovement(LID_TRICKSTER_C)
	waitmovement(LID_TRICKSTER_D)
	waitmovement(LID_TRICKSTER_E)
	waitmovement(EVENT_OBJ_ID_PLAYER)
	removeobject(LID_TRICKSTER_A)
	removeobject(LID_TRICKSTER_B)
	removeobject(LID_TRICKSTER_C)
	removeobject(LID_TRICKSTER_D)
	removeobject(LID_TRICKSTER_E)
	call (TrickTreat_MossdeepCity_Tricksters_Setup)
	closemessage
	releaseall
}

raw `
.align 2
TrickTreat_MossdeepCity_Tricksters_Movement0Table:
	.4byte Common_Movement_WalkDown1
	.4byte Common_Movement_NoOp
	.4byte Common_Movement_WalkUp1
	.4byte 0
TrickTreat_MossdeepCity_Tricksters_Movement1:
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_in_place_fastest_down
	step_end
TrickTreat_MossdeepCity_Tricksters_Movement2:
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_down
	walk_right
	walk_right
	walk_in_place_fastest_up
	step_end
TrickTreat_MossdeepCity_Tricksters_Movement3:
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	step_end
TrickTreat_MossdeepCity_Tricksters_Movement4:
	walk_down
	walk_down
	walk_down
	walk_down
	walk_down
	walk_left
	step_end
TrickTreat_MossdeepCity_Tricksters_MovementPlayerPanic:
	emote_exclamation_mark
	walk_in_place_fastest_left
	delay_16
	delay_8
	walk_in_place_fastest_up
	delay_16
	delay_8
	walk_in_place_fastest_down
	delay_16
	delay_8
	walk_in_place_fastest_right
	step_end

TrickTreat_MossdeepCity_Tricksters_RunAway1:
	walk_fast_left
	walk_fast_up
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_up
	walk_fast_up
	walk_fast_up
	walk_fast_up
	step_end
TrickTreat_MossdeepCity_Tricksters_RunAway2:
	walk_fast_left
	walk_fast_left
	walk_fast_up
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	step_end
TrickTreat_MossdeepCity_Tricksters_RunAway3:
	walk_fast_right
	walk_fast_right
	walk_fast_up
	walk_fast_up
	walk_fast_up
	walk_fast_up
	walk_fast_up
	walk_fast_up
	step_end
TrickTreat_MossdeepCity_Tricksters_RunAway4:
	walk_fast_right
	walk_fast_right
	walk_fast_up
	walk_fast_up
	walk_fast_up
	walk_fast_up
	walk_fast_right
	walk_fast_right
	walk_fast_right
	walk_fast_right
	step_end
TrickTreat_MossdeepCity_Tricksters_RunAway5:
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	step_end
`

script TrickTreat_MossdeepCity_DenyDueToTricksters {
	msgbox ("You have no {POKEMON}.\n"
			"You couldn't fight if they asked.$")
	release
}

script TrickTreat_MossdeepCity_TricksterFinal {
	clearflag (FLAG_PUZZLE_HAS_CHANGED_PARTY)
	setflag (FLAG_SYS_POKEMON_GET)
	callnative (MossdeepStealPokemon)
	return
}

script TrickTreat_MossdeepCity_Trickster1 {
	lock
	faceplayer
	applymovement (THIS_EVENT, Common_Movement_ExclamationMarkAndWait)
	subvar (VAR_TRICK_STOLEN_MON, 1)
	if (var(VAR_TRICK_STOLEN_MON) == 1) {
		msgbox ("Ach! How did you find me?!\p"
				"Doesn't matter! I don't have your\n"
				"{POKEMON}! And… … …\p"
				"W-Wait, you found all of us?!\p"
				"Uh…! Uh…! It was just a prank!\n"
				"Can't get mad! Don't tell my mom!\p"
				"Here! I did have your {POKEMON}!\n"
				"Take them back! Don't tell!$")
		call (TrickTreat_MossdeepCity_TricksterFinal)
	} else {
		copyvar (VAR_TEMP_0, VAR_TRICK_STOLEN_MON)
		subvar (VAR_TEMP_0, 1)
		buffernumberstring2 (0, VAR_TEMP_0)
		msgbox ("Ach! How did you find me?!\p"
				"Doesn't matter! I don't have your\n"
				"{POKEMON}! And you won't find the\l"
				"other {STR_VAR_1} of us!$")
	}
	closemessage
	fadescreen (1)
	removeobject (THIS_EVENT)
	fadescreen (0)
	release
}

script TrickTreat_MossdeepCity_RedHerringTrickster {
	lock
	faceplayer
	if (flag(FLAG_TEMP_2)) {
		msgbox ("P-Please leave?$")
		release
	} else {
		applymovement (THIS_EVENT, Common_Movement_ExclamationMarkAndWait)
		msgbox ("Ach! Who are you?!\n"
				"What do you want?!\p"
				"{POKEMON}? No? I don't what you're\n"
				"talking about! I've been by myself\l"
				"here all evening!\p"
				"P-Please leave?$")
		setflag (FLAG_TEMP_2)
		release
	}
}

# -----------------------------------------------------
# Trick or Treating

script TrickTreat_MossdeepCity_SetDoorGlowOff {
	# TODO
	# setmetatile (VAR_METATILE_X, VAR_METATILE_Y, 0x021, TRUE)
	# special (DrawWholeMapView)
	# delay (6)
	return
}

script TrickTreat_MossdeepCity_CandyGiver_Nurse {
	lock
	faceplayer
	msgbox ("Happy Halloween!\n"
			"Please take some candy!$")
	giveitem_std (ITEM_CANDY_ABUNDANT, 2)
	msgbox ("The {POKEMON} CENTER is always there\n"
			"for trainers everywhere.\p"
			"Have a good night!$")
	call (PuzzleCommon_EventScript_StandingCandyGiverLeave)
	setflag (FLAG_PUZZLE_20)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Mart {
	lock
	faceplayer
	msgbox ("Trick or Treat!\n"
			"Please take some candy!$")
	giveitem_std (ITEM_CANDY_ABUNDANT, 2)
	msgbox ("Be sure to drop by the MART for all your\n"
			"{POKEMON} supply needs!\p"
			"Have a good night!$")
	call (PuzzleCommon_EventScript_StandingCandyGiverLeave)
	setflag (FLAG_PUZZLE_21)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Leader {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	applymovement (4, Common_Movement_FacePlayer)
	applymovement (5, Common_Movement_FacePlayer)
	msgbox ("TATE: Trick or Treat!\n"
			"LIZA: Trick or Treat!\p"
			"TATE: But we've got a trick…\n"
			"LIZA: Before you get the treat…\p"
			"LIZA: Are you ready for this…?\n"
			"TATE: Can you take the heat…?$")
	trainerbattle_no_intro (TRAINER_01, 
			"TATE: Wow, you're good.\p"
			"LIZA: You got us good!$")
	msgbox ("TATE: Happy Halloween!\n"
			"LIZA: Here's some candy!\p"
			"TATE: Maybe we'll see you…\n"
			"LIZA: Later in the year!$")
	giveitem_std (ITEM_CANDY_UNCOMMON, 2)
	# PuzzleCommon_EventScript_StandingCandyGiverLeave, but for two
	closemessage
	applymovement (4, Common_Movement_WalkInPlaceUp)
	applymovement (5, Common_Movement_WalkInPlaceRight)
	waitmovement (0)
	opendoor (46, 11)
	waitdooranim
	applymovement (4, Common_Movement_WalkUp1)
	waitmovement(0)
	playse (SE_KAIDAN)
	removeobject (4)
	applymovement (5, Common_Movement_WalkRight1)
	waitmovement(0)
	applymovement (5, Common_Movement_WalkUp1)
	waitmovement(0)
	playse (SE_KAIDAN)
	removeobject (5)
	closedoor (46, 11)
	waitdooranim
	# 
	delay (10)
	setflag (FLAG_PUZZLE_22)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Steven {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("STEVEN: Trick or Treat!\p"
			"I'll let you decide, I think.\p"
			"Would you like the trick, that is,\n"
			"a battle with me?$", MSGBOX_YESNO)
	if (var(VAR_RESULT) == TRUE) {
		trainerbattle_no_intro (TRAINER_02, 
			"Well done, well done!$")
		setdooropen (VAR_METATILE_X, VAR_METATILE_Y)
		setflag (FLAG_BEAT_STEVEN)
		msgbox ("If you keep this up, you might just\n"
			"be champion some day.$")
		giveitem_std (ITEM_CANDY_TOBLERONE, 3)
	} else {
		msgbox("Very well, I'll just give you the treat.$")
		giveitem_std (ITEM_CANDY_TOBLERONE, 1)
	}
	msgbox ("Happy Halloween!$")
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_23)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Cook {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("Boo! Hahahahahaha!\n"
			"Here's some treats I just whipped up!$")
	giveitem_std (ITEM_CANDY_ABUNDANT, 4)
	msgbox ("Time to make some more!$")
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_24)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Lady {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("Trick or Treat!\n"
			"Take your pick!$")
	giveitem_std (ITEM_CANDY_UNCOMMON, 3)
	msgbox ("Have a good night!$")
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_25)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Expert {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("Ha! Let's test your mettle!$")
	trainerbattle_no_intro (TRAINER_03, 
			"Splendid! Splendid!$")
	setdooropen (VAR_METATILE_X, VAR_METATILE_Y)
	msgbox ("You're so full of potential!\n"
			"Here's a treat!$")
	giveitem_std (ITEM_CANDY_HEALTHY, 3)
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_26)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Camper {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("Hey! Let's battle for candy!$")
	trainerbattle_no_intro (TRAINER_04, 
			"Darn, I was hoping to come out with\n"
			"MORE candy from this…$")
	setdooropen (VAR_METATILE_X, VAR_METATILE_Y)
	msgbox ("I'm not giving you ALL of my haul.\n"
			"You can have this.$")
	giveitem_std (ITEM_CANDY_UNCOMMON, 1)
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_27)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_Mother {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("Oh, you!\p"
			"My boys stole {POKEMON} from you,\n"
			"didn't they?\p"
			"They're grounded until Febuary.\n"
			"Take all the candy you want.$")
	giveitem_std (ITEM_POTION, 35)
	giveitem_std (ITEM_FULL_RESTORE, 15)
	giveitem_std (ITEM_NUGGET, 3)
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_28)
	release
}

script TrickTreat_MossdeepCity_CandyGiver_RepentantBoy {
	lock
	goto_if_set (FLAG_PUZZLE_HAS_CHANGED_PARTY, TrickTreat_MossdeepCity_DenyDueToTricksters)
	call (TrickTreat_MossdeepCity_SetDoorGlowOff)
	call (PuzzleCommon_EventScript_DoorCandyGiverShow)
	msgbox ("My daddy told me to give these to you\n"
			"and to say sorry…$")
	giveitem_std (ITEM_BIG_PEARL, 2)
	call (PuzzleCommon_EventScript_DoorCandyGiverHide)
	setflag (FLAG_PUZZLE_29)
	release
}

# -----------------------------------------------------

script TrickTreat_MossdeepCity_ExitGirl {
	lock
	faceplayer
	msgbox ("Hey, {PLAYER}.\nDid you get a good haul?$")
	if (flag(FLAG_PUZZLE_HAS_CHANGED_PARTY) == TRUE) {
		msgbox ("What?! Your {POKEMON} were stolen?!\p"
				"Masked boys? I think I saw someone\n"
				"run past here, to around back.\p"
				"No, I don't know where the rest of\n"
				"them are, but they can't be far.\p"
				"This is an island, they have to be\n"
				"hiding somewhere around here.$")
		release
		end
	}
	if (flag(FLAG_PUZZLE_24) == FALSE || 
		flag(FLAG_PUZZLE_25) == FALSE || 
		flag(FLAG_PUZZLE_26) == FALSE || 
		flag(FLAG_PUZZLE_27) == FALSE) 
	{
		msgbox ("What? You didn't hit all the houses yet?\n"
				"What are you waiting for?!$")
		release
		end
	}
	if (flag(FLAG_PUZZLE_20) == FALSE || 
		flag(FLAG_PUZZLE_21) == FALSE)
	{
		msgbox ("Did you hit the Mart and the Center?\n"
				"You can't just pass up free candy!$")
		release
		end
	}
	if (flag(FLAG_PUZZLE_22) == FALSE) {
		msgbox ("Couldn't beat TATE & LIZA, huh?\n"
				"We'll have to pass on it for now.$")
	}
	if (flag(FLAG_PUZZLE_23) == FALSE) {
		msgbox ("Did you hit STEVEN's House yet?\n"
				"You don't have to fight him if you\l"
				"don't want to.$")
		release
		end
	} elif (flag(FLAG_BEAT_STEVEN) == TRUE) {
		msgbox ("Oh, you beat STEVEN?! Nice!\p"
				"He gives out more candy if you do!$")
	}
	msgbox ("Alright, time to head back to the\n"
			"TRICK HOUSE!\p"
			"{YOUNGSTER} is already back there, waiting.$")
	closemessage
	if (var(VAR_FACING) == DIR_WEST) {
		applymovement (EVENT_OBJ_ID_PLAYER, Common_Movement_BackOffDown1)
		waitmovement (0)
	}
	applymovement (THIS_EVENT, Common_Movement_WalkRight2)
	waitmovement (0)
	applymovement (THIS_EVENT, Common_Movement_WalkInPlaceUp)
	msgbox ("She wrote down the secret code\n"
			"on the door.\p"
			"{PLAY_SE SE_PIN}The door unsealed!$")
	closemessage
	playse (SE_W070)
	applymovement (3, Common_Movement_ObjectDoorOpen)
	waitmovement (0)
	applymovement (THIS_EVENT, Common_Movement_WalkUp1)
	waitmovement (0)
	removeobject (THIS_EVENT)
	applymovement (3, Common_Movement_ObjectDoorClose)
	waitmovement (0)
	setflag (FLAG_TRICK_HOUSE_PASSWORD_ENTERED)
	release
}

raw `
#undef METATILE_DoorOff
#undef FLAG_BEAT_STEVEN
#undef VAR_TRICK_STOLEN_MON
#undef LID_TRICKSTER_A
#undef FLAG_TRICKSTER_A_HIDE
#undef VAR_TRICKSTER_A_POS
#undef LID_TRICKSTER_B
#undef FLAG_TRICKSTER_B_HIDE
#undef VAR_TRICKSTER_B_POS
#undef LID_TRICKSTER_C
#undef FLAG_TRICKSTER_C_HIDE
#undef VAR_TRICKSTER_C_POS
#undef LID_TRICKSTER_D
#undef FLAG_TRICKSTER_D_HIDE
#undef VAR_TRICKSTER_D_POS
#undef LID_TRICKSTER_E
#undef FLAG_TRICKSTER_E_HIDE
#undef LID_RED_HERRING
#undef FLAG_RED_HERRING_HIDE
`