mapscripts TrickHouseEntrance_MapScripts {
	MAP_SCRIPT_ON_FRAME_TABLE [
		VAR_INTRO_COUNTER, 2: TrickHouseEntrance_WalkInCutscene
		VAR_INTRO_COUNTER, 4: TrickHouseEntrance_IntroCutscene
	]
	MAP_SCRIPT_ON_LOAD {
		switch (var(VAR_INTRO_COUNTER)) {
			case 2:
			case 3:
				setmetatile (5, 1, 0x20B, TRUE) // Close scroll door
				setobjectmovementtype (1, MOVEMENT_TYPE_INVISIBLE)
		}
	}
	MAP_SCRIPT_ON_WARP_INTO_MAP_TABLE [
		VAR_INTRO_COUNTER, 2: TrickHouseEntrance_OnWarp_Setup
		VAR_INTRO_COUNTER, 3: TrickHouseEntrance_OnWarp_Setup
		VAR_INTRO_COUNTER, 4 {
			addobject (1)
			setobjectxy(1, 5, 2)   turnobject(1, 1)
			setobjectxy(2, 8, 4)   turnobject(2, 2)
			setobjectxy(3, 7, 5)   turnobject(3, 2)
			setobjectxy(4, 6, 5)   turnobject(4, 2)
			setobjectxy(5, 4, 5)   turnobject(5, 2)
			setobjectxy(6, 3, 4)   turnobject(6, 2)
			turnobject(EVENT_OBJ_ID_PLAYER, 2)
		}
	]
	MAP_SCRIPT_ON_TRANSITION {
		checkplayergender
		if (var(VAR_RESULT) == MALE) {
			setvar (VAR_OBJ_GFX_ID_A, EVENT_OBJ_GFX_RIVAL_MAY_NORMAL)
		} else {
			setvar (VAR_OBJ_GFX_ID_A, EVENT_OBJ_GFX_RIVAL_BRENDAN_NORMAL)
		}
	}
}

raw `
#define LID_RIVAL 4
#define LID_JOEY 3
#define LID_FAIRY 6
#define LID_WALLY 5
#define LID_LINK 2
#define LID_PLAYER EVENT_OBJ_ID_PLAYER
`

script(local) TrickHouseEntrance_OnWarp_Setup {
	setvar (VAR_0x8000, 6)
	callnative (GetTrainerIDMod)
	setobjectmovementtype (1, MOVEMENT_TYPE_INVISIBLE)
	addobject (1)
	switch (var(VAR_RESULT)) {
		case 0: setobjectxy (1,11, 1)
		case 1: setobjectxy (1,11, 5)
		case 2: setobjectxy (1, 0, 5)
		case 3: setobjectxy (1, 6, 3)
		case 4: setobjectxy (1, 4, 4)
		case 5: setobjectxy (1, 3, 1)
		default: setobjectxy (1, 8, 1)
	}
	copyobjectxytoperm(1)
	setobjectxy(5, 4, 7)   turnobject(5, 2)
}

script TrickHouseEntrance_WalkInCutscene {
	lock
	applymovement (EVENT_OBJ_ID_PLAYER, Common_Movement_WalkUp1)
	waitmovement (0)
	msgbox ("You're being watched…$")
	applymovement (EVENT_OBJ_ID_PLAYER, Common_Movement_WalkInPlaceRight)
	applymovement (LID_RIVAL, Common_Movement_WalkInPlaceLeft)
	waitmovement (0)
	msgbox ("{RIVAL}: You felt that too, right?\p"
			"I wonder if the guy who opened the door\n"
			"is hiding?$")
	setvar (VAR_INTRO_COUNTER, 3)
	release
}

script TrickHouseEntrance_IntroCutscene {
	lockall
	setstepcallback (11)
	msgbox (PuzzleCommon_Text_GameIntro, MSGBOX_SIGN)
	setvar (VAR_0x8000, 1)
	call (PuzzleCommon_EventScript_WarpTrickMasterOut)
	//
	opendoor (5, 1)
	applymovement (LID_RIVAL, Common_Movement_WalkInPlaceLeft)
	applymovement (LID_JOEY, Common_Movement_WalkInPlaceRight)
	applymovement (LID_FAIRY, Common_Movement_WalkInPlaceRight)
	applymovement (LID_LINK, Common_Movement_WalkInPlaceLeft)
	applymovement (LID_WALLY, Common_Movement_WalkInPlaceRight)
	applymovement (LID_PLAYER, Common_Movement_WalkInPlaceRight)
	delay (60)
	//
	applymovement (LID_FAIRY, Common_Movement_WalkUp1)
	waitmovement (0)
	applymovement (LID_FAIRY, Common_Movement_WalkInPlaceDown)
	message("{FAIRY}: Puzzles? I'm all for that!\n"
			"Let's go!$")
	applymovement (LID_WALLY, Common_Movement_WalkInPlaceUp)
	delay (6)
	applymovement (LID_RIVAL, Common_Movement_WalkInPlaceUp)
	delay (8)
	applymovement (LID_PLAYER, Common_Movement_WalkInPlaceUp)
	delay (10)
	applymovement (LID_JOEY, Common_Movement_WalkInPlaceUp)
	waitmessage
	waitbuttonpress
	playse (SE_SELECT)
	//
	applymovement (LID_FAIRY, TrickHouseEntrance_Movement1_Fairy)
	applymovement (LID_WALLY, Common_Movement_WalkUp1)
	msgbox ("{WALLY}: {FAIRY}!$")
	waitmovement (LID_FAIRY)
	closemessage
	//
	delay (10)
	applymovement (LID_LINK, TrickHouseEntrance_Movement1_Link)
	applymovement (LID_WALLY, Common_Movement_WalkInPlaceRight)
	msgbox ("{LINK}: That TRICK guy said there was\n"
			"candy to get, right?!\p"
			"Yeah! I'm with {FAIRY}!\n"
			"Coming, {YOUNGSTER}?$")
	closemessage
	applymovement (LID_LINK, TrickHouseEntrance_Movement2_Link)
	applymovement (LID_JOEY, TrickHouseEntrance_Movement2_Joey)
	waitmovement (LID_JOEY)
	//
	applymovement (LID_WALLY, Common_Movement_WalkInPlaceDown)
	waitmovement (0)
	delay (10)
	applymovement (LID_PLAYER, Common_Movement_WalkInPlaceLeft)
	applymovement (LID_RIVAL, Common_Movement_WalkInPlaceLeft)
	delay (20)
	msgbox ("{WALLY}: I'll just hang out here,\n"
			"I guess…$")
	applymovement (LID_RIVAL, TrickHouseEntrance_Movement2_Rival)
	msgbox ("{RIVAL}: Suit yourself…\n"
			"C'mon, {PLAYER}! Let's go check this out!$")
	waitmovement (LID_RIVAL)
	closemessage
	applymovement (LID_RIVAL, TrickHouseEntrance_Movement3_Rival)
	applymovement (LID_PLAYER, TrickHouseEntrance_Movement3_Player)
	waitmovement (LID_RIVAL)
	waitmovement (LID_PLAYER)
	closedoor (5, 1)
	waitdooranim
	// Cleanup
	removeobject (LID_RIVAL)
	removeobject (LID_JOEY)
	removeobject (LID_FAIRY)
	removeobject (LID_LINK)
	setflag (FLAG_HIDE_TRICK_HOUSE_INTRO_CHARACTERS)
	setvar (VAR_INTRO_COUNTER, 5)
	releaseall
}

movement TrickHouseEntrance_Movement1_Fairy {
	walk_up
	walk_right * 2
	walk_up
	set_invisible
}
movement TrickHouseEntrance_Movement1_Link {
	walk_up * 2
	walk_left
	walk_in_place_fastest_down
}
movement TrickHouseEntrance_Movement2_Link {
	walk_left * 2
	walk_up
	set_invisible
}
movement TrickHouseEntrance_Movement2_Joey {
	walk_right
	walk_up * 3
	walk_left * 3
	walk_up
	set_invisible
}
movement TrickHouseEntrance_Movement2_Rival {
	walk_down
	walk_left * 2
	walk_up
}
movement TrickHouseEntrance_Movement3_Rival {
	walk_left
	walk_up * 3
	walk_right * 2
	walk_up
	set_invisible
}
movement TrickHouseEntrance_Movement3_Player {
	delay_16 * 3
	walk_in_place_fastest_up
}

///////////////////////////////////////////////////////

script TrickHouseEntrance_EventScript_TrickMaster {
	switch (var(VAR_INTRO_COUNTER)) {
		case 3: goto (TrickHouseEntrance_EventScript_FindTrickMaster)
	}
}
script TrickHouseEntrance_EventScript_FindTrickMaster {
	lockall
	setvar (VAR_0x8000, 6)
	callnative (GetTrainerIDMod)
	switch (var(VAR_RESULT)) {
		case 0: msgbox ("Hah? Girr…\p"
				"How did you know I concealed myself\n"
				"in this cupboard? You're sharp!$")
		case 1: msgbox ("Hah? Girr…\p"
				"How did you know I concealed myself\n"
				"behind this tree? You're sharp!$")
		case 2: msgbox ("Hah? Girr…\p"
				"How did you know I concealed myself\n"
				"in this planter? You're sharp!$")
		case 3: msgbox ("Hah? Girr…\p"
				"How did you know I concealed myself\n"
				"beneath this desk? You're sharp!$")
		case 4: msgbox ("Hah? Girr…\p"
				"How did you know I concealed myself\n"
				"beneath this cushion? You're sharp!$")
		default: msgbox ("Hah? Girr…\p"
				"How did you know I concealed myself\n"
				"behind this window? You're sharp!$")
	}
	setvar (VAR_INTRO_COUNTER, 4)
	warpsilent (MAP_TRICK_HOUSE_ENTRANCE, 255, 5, 5)
	waitstate
	releaseall
}

raw `
#undef LID_RIVAL
#undef LID_JOEY
#undef LID_FAIRY
#undef LID_WALLY
#undef LID_LINK
#undef LID_PLAYER
`

script TrickHouseEntrance_EventScript_ScrollDoor {
	msgbox ("The scroll reads\n"
			"“The TRICK MASTER is the GREATEST!”", MSGBOX_SIGN)
}

script TrickHouseEntrance_EventScript_Link {
	msgbox ("{LINK}: Man, I don't see any candy\n"
			"around here.\p"
			"We could be in SLATEPORT right now\n"
			"hauling in the big dough!$", MSGBOX_NPC)
}
script TrickHouseEntrance_EventScript_Joey {
	lock
	msgbox ("{YOUNGSTER}: {LINK}, chill!\p"
			"We've got pleanty of time for more\n"
			"trick-or-treating!$")
	playse (SE_SELECT)
	faceplayer
	msgbox ("And people call ME the annoying one.\p"
			"C'mon, I haven't talked about my\n"
			"RATTATA in ten whole minutes!$")
	closemessage
	applymovement (THIS_EVENT, Common_Movement_FaceRight)
	waitmovement (0)
	release
}
script TrickHouseEntrance_EventScript_Fairy {
	msgbox ("{FAIRY}: This place has been swept\n"
			"clean recently, so it's not haunted.\p"
			"Maybe someone's around…$", MSGBOX_NPC)
}
script TrickHouseEntrance_EventScript_Rival {
	msgbox ("{RIVAL}: Maybe we can find who's\n"
			"watching us if we look around…\p"
			"Don't worry: if anyone tries to steal\n"
			"you away, you have us as backup.$", MSGBOX_NPC)
}
script TrickHouseEntrance_EventScript_Wally {
	lock
	faceplayer
	callnative (GetNumPuzzlesCompleted)
	if (var(VAR_INTRO_COUNTER) < 5) {
		msgbox ("{WALLY}: Well… the door didn't slam shut\n"
				"and lock behind us…\p"
				"So, we're not in danger… yet…\p"
				"I'm gonna stay here next to the door,\n"
				"just in case anyway…$")
	} 
	// The number completed should always be less than the current puzzle number
	// during the first run
	elif (var(VAR_RESULT) > VAR_CURRENT_PUZZLE) {
		buffernumberstring(0, VAR_RESULT)
		msgbox ("{WALLY}: How many puzzles? {STR_VAR_1}?!\p"
				"But there aren't that many puzzles!\n"
				"The TRICK MASTER told me!\p"
				"Do you really like the puzzles so much\n"
				"that you're doing them all again?$")
	}
	elif (var(VAR_RESULT) > 9) {
		buffernumberstring(0, VAR_RESULT)
		msgbox ("{WALLY}: How many puzzles? {STR_VAR_1}?!\p"
				"No, I'm good here. I'll never catch up\n"
				"to you guys at this point.$")
	}
	elif (var(VAR_RESULT) > 3) {
		msgbox ("{WALLY}: Really? The guy actually has a\n"
				"bunch of puzzles for you guys to do…?\p"
				"N-No, I'm alright. I'll be here if you\n"
				"guys end up getting lost somewhere…$")
	}
	elif (flag(FLAG_SYS_POKEMON_GET) == TRUE) {
		msgbox ("{WALLY}: Oh, you've got RENTAL {POKEMON}?\n"
				"Man, this event is sophisticated.\p"
				"What? Me join in?\n"
				"N-No, I think I'm alright.$")
	}
	else {
		msgbox ("{WALLY}: I-I'll just be here…\n"
				"A-Alone…\p"
				"My auntie wouldn't like me going into\n"
				"strange men's puzzle dungeons…$")
	}
	release
}
