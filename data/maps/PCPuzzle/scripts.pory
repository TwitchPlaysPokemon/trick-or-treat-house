raw `

PCPuzzle_MapScripts::
	puzzle_info PCPuzzle_Name, PCPuzzle_Author
	puzzle_adjective PCPuzzle_Adjective
	puzzle_quip PCPuzzle_Quip
	map_script MAP_SCRIPT_ON_LOAD, PCPuzzle_OnLoad
	.byte 0

PCPuzzle_Name:
	.string "PC madness$"
PCPuzzle_Author:
	.string "Ericchi$"
PCPuzzle_Adjective:
	.string "techno-logic$"
PCPuzzle_Quip:
	.string "So you went through that PC hell, huh?\p"
	.string "I'm impressed.\p"
	.string "The last time someone used those PCs\n"
	.string "so much, something bloody\l"
	.string "horrible happened.$"

@ -----------------------------------------------------


PCPuzzle_MapScripts::
	.byte 0

#define FLAG_TERMINAL_YELLOW FLAG_PUZZLE_30
#define FLAG_TERMINAL_BLUE FLAG_PUZZLE_31
#define FLAG_TERMINAL_RED FLAG_PUZZLE_32
#define FLAG_TERMINAL_GREEN FLAG_PUZZLE_33

#define FLAG_PASSWORD_YELLOW FLAG_PUZZLE_34
#define FLAG_PASSWORD_BLUE FLAG_PUZZLE_35
#define FLAG_PASSWORD_RED FLAG_PUZZLE_36
#define FLAG_PASSWORD_GREEN FLAG_PUZZLE_37

#define FLAG_EVERYTHINGDONE FLAG_PUZZLE_38
`

PCPuzzle_ScrollTrapped{
	lock
	msgbox ("Activate the four terminals\nto release the scroll.$")
	release
	end
}

PCPuzzle_Check {
	if (flag(FLAG_TERMINAL_YELLOW) && flag(FLAG_TERMINAL_BLUE) && flag(FLAG_TERMINAL_RED) && flag(FLAG_TERMINAL_GREEN) && !flag(FLAG_EVERYTHINGDONE)){
		// Everything done, unlock the scroll
		setflag(FLAG_EVERYTHINGDONE)
	}
	return
}

PCPuzzle_Terminal_Yellow {
	lock
	if (flag(FLAG_TERMINAL_YELLOW)) {
		msgbox (PCPuzzle_TerminalActivated_Text)
		call(PCPuzzle_Check)
	} elif (flag(FLAG_PASSWORD_YELLOW)) {
		msgbox ("You entered the password.\p'WOW!MuchPuzzleSuchTricks'$")
		setflag(FLAG_TERMINAL_YELLOW)
		goto (PCPuzzle_Terminal_Yellow)
	} else
	{
		msgbox ("You need a password to\nactivate this terminal.$")
	}
	release
	end
}

PCPuzzle_Terminal_BLUE {
	lock
	if (flag(FLAG_TERMINAL_BLUE)) {
		msgbox (PCPuzzle_TerminalActivated_Text)
		call(PCPuzzle_Check)
	} elif (flag(FLAG_PASSWORD_BLUE)) {
		msgbox ("You entered the password.\p'AllYourBaseAreBelongToUs'$")
		setflag(FLAG_TERMINAL_BLUE)
		goto (PCPuzzle_Terminal_BLUE)
	} else
	{
		msgbox ("You need a password to\nactivate this terminal.$")
	}
	release
	end
}

PCPuzzle_Terminal_RED {
	lock
	if (flag(FLAG_TERMINAL_RED)) {
		msgbox (PCPuzzle_TerminalActivated_Text)
		call(PCPuzzle_Check)
	} elif (flag(FLAG_PASSWORD_RED)) {
		msgbox ("You entered the password.\p'RevoLovesChatot'$")
		setflag(FLAG_TERMINAL_RED)
		goto (PCPuzzle_Terminal_RED)
	} else
	{
		msgbox ("You need a password to\nactivate this terminal.$")
	}
	release
	end
}

PCPuzzle_Terminal_GREEN {
	lock
	if (flag(FLAG_TERMINAL_GREEN)) {
		msgbox (PCPuzzle_TerminalActivated_Text)
		call(PCPuzzle_Check)
	} elif (flag(FLAG_PASSWORD_GREEN)) {
		msgbox ("You entered the password.\p'VoHiYointhechat'$")
		setflag(FLAG_TERMINAL_GREEN)
		goto (PCPuzzle_Terminal_GREEN)
	} else
	{
		msgbox ("You need a password to\nactivate this terminal.$")
	}
	release
	end
}

PCPuzzle_PC_Trainer1 {
	lock
	if (flag(FLAG_PUZZLE_20)){
		msgbox(PCPuzzle_PCActivated_Text)
	} else {
	    msgbox(PCPuzzle_Login_Text), MSGBOX_YESNO)
	    if (var(VAR_RESULT) == 1){
            // Trainer here
			msgbox(PCPuzzle_NoPassword_Text)
			setflag(FLAG_PUZZLE_20)
	    } else {
			msgbox(PCPuzzle_NoLogin_Text)
    	}
	}
	release
	end
}

PCPuzzle_PC_Trainer2 {
	lock
	if (flag(FLAG_PUZZLE_21)){
		msgbox(PCPuzzle_PCActivated_Text)
	} else {
	    msgbox(PCPuzzle_Login_Text), MSGBOX_YESNO)
	    if (var(VAR_RESULT) == 1){
            // Trainer here
			msgbox(PCPuzzle_PasswordFound_Text)
			setflag (FLAG_PASSWORD_RED)
			msgbox("This seems to be the password\nfor the red terminal.$")
			setflag(FLAG_PUZZLE_21)
	    } else {
			msgbox(PCPuzzle_NoLogin_Text)
    	}
	}
	release
	end
}

PCPuzzle_PC_Trainer3 {
	lock
	if (flag(FLAG_PUZZLE_22)){
		msgbox(PCPuzzle_PCActivated_Text)
	} else {
	    msgbox(PCPuzzle_Login_Text), MSGBOX_YESNO)
	    if (var(VAR_RESULT) == 1){
            // Trainer here
			msgbox(PCPuzzle_NoPassword_Text)
			setflag(FLAG_PUZZLE_22)
	    } else {
			msgbox(PCPuzzle_NoLogin_Text)
    	}
	}
	release
	end
}

PCPuzzle_PC_Trainer4 {
	lock
	if (flag(FLAG_PUZZLE_23)){
		msgbox(PCPuzzle_PCActivated_Text)
	} else {
	    msgbox(PCPuzzle_Login_Text), MSGBOX_YESNO)
	    if (var(VAR_RESULT) == 1){
            // Trainer here
			msgbox(PCPuzzle_NoPassword_Text)
			setflag(FLAG_PUZZLE_23)
	    } else {
			msgbox(PCPuzzle_NoLogin_Text)
    	}
	}
	release
	end
}

PCPuzzle_PC_Nothing1 {
	lock
	if (flag(FLAG_PUZZLE_24)){
		msgbox(PCPuzzle_PCActivated_Text)
	} else {
		msgbox(PCPuzzle_Login_Text), MSGBOX_YESNO)
	    if (var(VAR_RESULT) == 1){
			msgbox(PCPuzzle_NoPassword_Text)
			setflag(FLAG_PUZZLE_24)
		} else {
			PCPuzzle_NoLogin_Text
		}
	}
	release
	end
}

PCPuzzle_PC_Nothing2 {
	lock
	if (flag(FLAG_PUZZLE_25)){
		msgbox(PCPuzzle_PCActivated_Text)
	} else {
		msgbox(PCPuzzle_Login_Text), MSGBOX_YESNO)
	    if (var(VAR_RESULT) == 1){
			msgbox(PCPuzzle_NoPassword_Text)
			setflag(FLAG_PUZZLE_25)
		} else {
			PCPuzzle_NoLogin_Text
		}
	}
	release
	end
}

PCPuzzle_Login_Text:
    .string "Do you want to log into this PC?$"

PCPuzzle_NoLogin_Text:
    .string "You decided to stay away from this PC.$"

PCPuzzle_TerminalActivated_Text:
    .string "This terminal is already activated.$"

PCPuzzle_PCActivated_Text:
    .string "You already logged into this PC.$"

PCPuzzle_NoPassword_Text:
	.string "Upon inspecting this PC, you sadly\n"
			"realize that it does not contain\l"
			"any useful information.$"

PCPuzzle_PasswordFound_Text:
	.string "You found a password!$"